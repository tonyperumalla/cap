/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode curr = cT(preorder,0,preorder.length-1,0);
        return curr;   
    }

    public int getIndex(int []arr,int start,int end,int val){
        int i;
        for(i=start;i<=end;i++){
            if(arr[i]>val){
                return i;
            }
        }
        return i;
    }

    public TreeNode cT(int [] pre ,int left ,int right ,int index){
        if(left>right){
            return null ;
        }
        TreeNode root = new TreeNode(pre[index]);
        if(left==right){
            return root;
        }
            
        int skip = getIndex(pre,left,right,root.val);
        root.left = cT(pre,left+1,skip-1,left+1);
        root.right = cT(pre,skip,right,skip);
        return root;
    }


    
}
